.card-img {
    text-align: center;
    background: var(--CT_cardImgBg);

    img {
        max-height: 55vw;

        @include media-breakpoint-up(sm) {
            max-height: 32vw;
        }

        @include media-breakpoint-up(md) {
            max-height: 23vw;
        }

        @include media-breakpoint-up(xl) {
            max-height: 17rem;
        }
    }
}

.has-masonry {
    .card-img img {
        max-height: none;
    }
}

.card-body,
.card-footer {
    p:last-child {
        margin-bottom: 0;
    }
}

.card-divider {
    padding-top: calc(3px + #{$card-padding-y});
    margin: 0 #{-$card-padding-x};
    line-height: 1;
    border-top: 3px solid var(--CT_cardDividerColor);

    & + & {
        margin-top: -1rem;
    }

    &.spaced-top {
        margin-top: $card-padding-y;
    }
}

.card-footer-title {
    margin-bottom: .25rem;
    @include font-size(.8125rem);
}

.card {
    .card-header + .card-body {
        padding-top: 0;
        margin-top: $card-title-margin-bottom * -1;
    }

    .stars-chart {
        border-color: var(--CT_cardDividerColor);

        .progress {
            width: 1.5rem;
        }
        .progress-bar {
            background-color: var(--CT_cardProgressBarBg);
        }
    }
    .stars-chart-result {
        @include font-size(.8125rem);
    }
}

.card-library {
    border-width: 0;
    box-shadow: var(--CT_cardLibraryBoxShadow);

    .card-title {
        hyphens: auto;
        word-wrap: normal;

        a {
            color: inherit;
            text-decoration: none;

            &:focus {
                color: inherit;
                text-decoration: underline;
            }
        }
    }

    .card-author {
        margin-top: -.25rem;
    }

    .card-header {
        background: transparent;
        border-bottom-width: 0;

        &:first-child {
            .link-stretch:last-child .card-title {
                margin-bottom: 0;
            }
        }
    }

    .has-favorite .card-title {
        margin-right: calc(1rem + .25rem + (.375rem + 1px) * 2);
    }
    .btn-starred {
        padding: .14125em .375em;
        @include font-size(1rem);
        line-height: 1.25;
    }

    .card-body {
        @include calc-line-height(1.375);
    }

    .card-hover {
        position: relative;
        flex: 1;
        overflow: hidden;
        @include border-top-radius($card-border-radius);

        // stylelint-disable declaration-no-important
        &:hover {
            background-color: var(--CT_btnPrimaryHoverBg) !important;

            .card-header,
            .card-title,
            .card-author,
            .card-img,
            .card-body,
            .card-library-favorite .btn,
            ~ .card-library-favorite .btn {
                color: var(--CT_btnPrimaryHoverColor) !important;
                background-color: var(--CT_btnPrimaryHoverBg) !important;
                border-color: var(--CT_btnPrimaryHoverColor) !important;
            }
        }
        // stylelint-enable  declaration-no-important

        &:last-child .card-body:last-child {
            @include border-bottom-radius($card-inner-border-radius);
        }
    }

    .card-footer {
        @include calc-line-height(1.375);
        background-color: var(--CT_cardLibraryBgSecondary);
        border-top: 3px solid var(--CT_cardDividerColor);
    }

    > .card-img {
        // Add border-radius here so that narrower images dont' get rounded, except for corner overflow
        overflow: hidden;
        @include border-radius($card-inner-border-radius);

        // Border radius resets
        &:not(:first-child) {
            @include border-top-radius(0);
        }

        &:not(:last-child) {
            @include border-bottom-radius(0);
        }
    }

    &.card-horizontal {
        .card-col {
            position: relative;
        }

        .card-hover {
            .row {
                height: 100%;
            }
        }

        @include media-breakpoint-up(lg) {
            .card-hover {
                @include border-top-end-radius(0);
                @include border-bottom-start-radius($card-border-radius);
            }
            .card-footer {
                display: flex;
                flex-direction: column;
                flex-grow: 1;
                border-top: 0;
                border-left: 3px solid var(--CT_cardDividerColor);

                .row:last-child {
                    height: 100%;
                }
            }
        }
    }
}

.card-library-favorite {
    position: absolute;
    top: $card-header-padding-y * .5;
    right: $card-header-padding-x * .5;
    z-index: 1;
}

.card-toggle-btn {
    background-color: var(--CT_cardBg);

    &.link-above {
        z-index: 1;
    }
}

.card-library-tag {
    line-height: 1;
}

.card-library-action {
    // 1. Use flex to remove whitespace between items
    // 2. Reduce margin/spacing to pull buttons out more
    // 3. Push to right side of card
    display: flex; // 1
    align-items: flex-end;
    justify-content: flex-end;
    padding-right: .5rem; // 2
    padding-left: 0;
    margin-top: -.25rem; // 2
    margin-bottom: -.25rem; // 2
    margin-left: auto; // 3
    white-space: nowrap;

    .dropdown {
        display: inline-flex;
    }
}

.card-special {
    color: var(--CT_cardSpecialColor);
    background-color: var(--CT_cardSpecialBg);
    border-color: transparent;
    box-shadow: none;

    .card-body {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
}

.card-author {
    @include font-size(.875rem);
    color: var(--CT_cardLibraryAuthorColor);
}

.card-login {
    line-height: 1.25;
    color: var(--CT_cardLoginColor);
    background: var(--CT_cardLoginBg);
    border-color: transparent;

    .card-body {
        padding: .75rem 1.5rem;
    }
}

.card-important {
    background-color: var(--CT_cardImportantBg);
    border-color: var(--CT_cardImportantBorderColor);
    border-right: 0;
    border-bottom: 0;
    box-shadow: var(--CT_cardImportantBoxShadow);
}
.card-resource {
    background-color: var(--CT_cardResourceBg);
    border-color: var(--CT_cardResourceBorderColor);
    border-right: 0;
    border-bottom: 0;
    box-shadow: var(--CT_cardResourceBoxShadow);
}
.card-important,
.card-resource {
    .row {
        margin-right: -.25rem;
        margin-left: -.25rem;

        > * {
            padding-right: .25rem;
            padding-left: .25rem;
        }
    }
    .card-hover {
        @include border-bottom-radius($card-border-radius);
    }
}

.card-details {
    background-color: transparent;
    border: 0;
}
