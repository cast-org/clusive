// stylelint-disable selector-no-qualifying-type, selector-max-attribute

// Override the Readium CSS overrides to get closer to Clusive styling
:root[style*="readium-advanced-on"][style*="--USER__lineHeight"] {
    body {
        --RS__maxLineLength: 45rem;
        font-family: $font-family-sans-serif;
    }

    h1,
    .h1,
    h2,
    .h2,
    h3,
    .h3,
    h4,
    .h4,
    h5,
    .h5,
    h6,
    .h6 {
        font-family: "Arial Black", Arial, sans-serif;
        font-weight: 900;
        @include calc-line-height(1.25);
    }
    h1,
    .h1 {
        @include font-size(1.875rem, true);
    }

    h2,
    .h2 {
        @include font-size(1.625rem, true);
    }

    h3,
    .h3 {
        @include font-size(1.375rem, true);
    }

    h4,
    .h4 {
        @include font-size(1.25rem, true);
    }

    h5,
    .h5 {
        @include font-size(1.125rem, true);
    }

    h6,
    .h6 {
        @include font-size(1rem, true);
    }

    h2,
    h3,
    h4,
    h5,
    h6 {
        @include clearfix();
    }

    ol {
        > li::marker {
            font-weight: $font-weight-bold;
        }
    }

    details {
        position: relative;
        padding: $box-padding-y $box-padding-x;
        margin-bottom: $box-margin-bottom;
        line-height: $box-line-height;
        color: var(--CT_boxResourceColor);
        background-color: var(--CT_boxResourceBg);
        @include border-radius($box-border-radius);
        @include clearfix();

        &[open] summary {
            padding-bottom: 1rem;
        }
    }

    figure {
        width: 80%;
        margin: 0 auto 1.5rem;
        text-align: center;

        details {
            padding: 0;
            margin: .5rem 0 0;
            line-height: inherit;
            color: inherit;
            background-color: transparent;
            @include border-radius(0);
        }

        summary {
            font-weight: $font-weight-normal;
            color: var(--CT_linkColor);
            text-decoration: underline;
            list-style: none;

            @include hover-focus() {
                color: var(--CT_linkHoverColor);
                text-decoration: underline;
            }
        }
    }

    .row figure {
        width: 100%;
        margin: 0 0 1rem;
    }

    figcaption {
        padding: .5rem;
        @include font-size(.875rem);
        @include calc-line-height(1.5);
        color: var(--CT_figureCaptionColor);
        text-align: left;
        background-color: var(--CT_figureCaptionBg);

        p:last-child {
            margin-bottom: 0;
        }
    }

    .callout {
        width: 80%;
        margin: 0 auto 1rem;

        @include media-breakpoint-up(sm) {
            float: right;
            width: 41.666667%;
            padding-left: .5rem;
            margin: 0 0 .5rem .5rem;
        }

        > p {
            margin: .5rem;
        }

        figure {
            width: auto;
            margin: 0 0 1rem;
        }
    }

    blockquote {
        width: 80%;
        padding: .25rem .75rem;
        margin-right: auto;
        margin-left: auto;
        @include font-size(1.25rem, true);
        font-style: italic;
        border-left: 4px solid var(--CT_boxResourceDivderColor);

        p {
            @include font-size(inherit, true);
        }

        p:last-child {
            margin-bottom: 0;
        }
    }
}

.yt-video {
    position: relative;
    width: 100%;

    &::before {
        display: block;
        padding-top: percentage(divide(3, 4));
        content: "";
    }

    > iframe,
    > .play-icon {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .play-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        background-color: #000;
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
        border: 0;
        @include font-size(0);

        &::before {
            position: absolute;
            top: 50%;
            left: 50%;
            display: block;
            width: 4rem;
            height: 4rem;
            content: "";
            background-color: var(--CT_boxResourceBg);
            border: 3px solid transparent;
            @include border-radius(100%);
            opacity: .85;
            transform: translate(-50%, -50%);
        }
        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
            display: block;
            content: "";
            border: 1.25rem solid transparent;
            border-left: 2rem solid var(--CT_boxResourceColor);
            opacity: .85;
            transform: translate(-50%, -50%) translateX(.875rem);
        }

        &:hover,
        &:focus {
            &::before,
            &::after {
                opacity: 1;
            }
        }

        &:focus{
            border: 0;

            &::before {
                border-color: var(--CT_boxResourceColor);
            }
        }

    }
}
