# Generated by Django 2.2.20 on 2021-06-03 16:53
import logging

from django.db import migrations, models
from django.db.models import Count

logger = logging.getLogger(__name__)

def set_initial_count(apps, schema_editor):
    UserStats = apps.get_model('roster', 'UserStats')
    LoginSession = apps.get_model('eventlog', 'LoginSession')
    ## Should give us a structure like [ { user: u, logins: n}, ...]
    counts = LoginSession.objects.values('user').annotate(logins=Count('user'))
    for stat in UserStats.objects.all():
        c = list(filter(lambda x: x['user'] == stat.user.id, counts))
        if c:
            stat.logins = c[0]['logins']
            stat.save()
        else:
            logger.warning('Did not find any logins for user with other stats: %s', stat)



class Migration(migrations.Migration):

    dependencies = [
        ('roster', '0034_auto_20210602_0100'),
    ]

    operations = [
        migrations.AddField(
            model_name='userstats',
            name='logins',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.RunPython(set_initial_count, migrations.RunPython.noop),
    ]

